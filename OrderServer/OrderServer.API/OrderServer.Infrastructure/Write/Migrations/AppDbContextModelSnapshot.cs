// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OrderServer.Infrastructure.Write.Contexts;

#nullable disable

namespace OrderServer.Infrastructure.Write.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("order_server")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OrderServer.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("_receiverId")
                        .HasColumnType("uuid");

                    b.Property<string>("_state")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Status");

                    b.Property<float>("_totalPrice")
                        .HasColumnType("real")
                        .HasColumnName("TotalPrice");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("_receiverId");

                    b.ToTable("order", "order_server");
                });

            modelBuilder.Entity("OrderServer.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("_firstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("FistName");

                    b.Property<string>("_lastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("LastName");

                    b.HasKey("Id");

                    b.ToTable("user", "order_server");
                });

            modelBuilder.Entity("OrderServer.Domain.ValueObjects.MovieItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("Seat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("movie", "order_server");
                });

            modelBuilder.Entity("OrderServer.Domain.ValueObjects.Receiver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("receiver", "order_server");
                });

            modelBuilder.Entity("OrderServer.Domain.Entities.Order", b =>
                {
                    b.HasOne("OrderServer.Domain.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("OrderServer.Domain.ValueObjects.Receiver", "_receiver")
                        .WithMany()
                        .HasForeignKey("_receiverId");

                    b.Navigation("User");

                    b.Navigation("_receiver");
                });

            modelBuilder.Entity("OrderServer.Domain.ValueObjects.MovieItem", b =>
                {
                    b.HasOne("OrderServer.Domain.Entities.Order", null)
                        .WithMany("_movies")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OrderServer.Domain.Entities.Order", b =>
                {
                    b.Navigation("_movies");
                });

            modelBuilder.Entity("OrderServer.Domain.Entities.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
